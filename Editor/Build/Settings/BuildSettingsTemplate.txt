using System.IO;
using UnityEditor;

namespace UnityBuild
{

[InitializeOnLoad]
public class ProjectBuildSettings : BuildSettings
{
    // The name of executable file (e.g. mygame.exe, mygame.app)
    private const string _binName = "mygame";

    // The base path where builds are output.
    // Path is relative to the Unity project's base folder unless an absolute path is given.
    private const string _binPath = "bin";

    // A list of scenes to include in the build. The first listed scene will be loaded first.
    private readonly string[] _scenesInBuild = new string[] {
        // @"Assets/Scenes/scene1.unity",
        // @"Assets/Scenes/scene2.unity",
        // ...
    };

    // A list of files/directories to include with the build. 
    // Paths are relative to Unity project's base folder unless an absolute path is given.
    private readonly string[] _copyToBuild = new string[] {
        // @"DirectoryToInclude/",
        // @"FileToInclude.txt",
        // ...
    };

    #region Constructor (SET CLASS NAME)

    static ProjectBuildSettings()
    {
        BuildProject.RegisterSettings(new ProjectBuildSettings());
    }

    #endregion

    #region Methods & Properties (DO NOT EDIT)

    public override string binName
    {
        get { return _binName; }
    }

    public override string binPath
    {
        get { return _binPath.TrimEnd(Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar); }
    }

    public override string[] scenesInBuild
    {
        get { return _scenesInBuild; }
    }

    public override string[] copyToBuild
    {
        get { return _copyToBuild; }
    }

    #endregion
}

}